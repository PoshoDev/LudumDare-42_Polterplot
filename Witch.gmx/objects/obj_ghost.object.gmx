<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ghost_catcher_black</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///INITIALIZE

image_speed = 0;
hp = 9;

scale = (global.rom_width/sprite_width)/5;

image_xscale = scale;
image_yscale = scale;

image_alpha = 0;
anim = 0;
sin_add = 0;
alarm[0] = 30;
alarm[3] = 60*30;
spd = global.rom_width/250/2;
frame = 0;
idle = false;
idle_spd = global.rom_width/500/2;
target = noone;
knock = false;
cooldown = false;
dir = 1;
carrying = false;
picking = -1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///ASSIGNATION

// Owner
if (y &gt; global.rom_center_y)
    owner = 0;
else
    owner = 1;
    
// Sprite
soil = instance_nearest(x, y, obj_soil);
seed = soil.seed;

switch(seed)
{
    case seedno.attacker:
        if (!global.player[owner].color)
            sprite_index = spr_ghost_attacker_black;
        else
            sprite_index = spr_ghost_attacker_white;
            
        spd *= 1.5;
        scr_play(snd_ghost_attacker_spawn, false);
    break;
    
    case seedno.defender:
        if (!global.player[owner].color)
            sprite_index = spr_ghost_defender_black;
        else
            sprite_index = spr_ghost_defender_white;
            
        scr_play(snd_ghost_defender_spawn, false);
    break;
    
    case seedno.catcher:
        if (!global.player[owner].color)
            sprite_index = spr_ghost_catcher_black;
        else
            sprite_index = spr_ghost_catcher_white;
            
        scr_play(snd_ghost_catcher_spawn, false);
    break;
    
    case seedno.paralyzer:
        if (!global.player[owner].color)
            sprite_index = spr_ghost_paralyzer_black;
        else
            sprite_index = spr_ghost_paralyzer_white;
    break;
    
    case seedno.bomber:
        if (!global.player[owner].color)
            sprite_index = spr_ghost_bomber_black;
        else
            sprite_index = spr_ghost_bomber_white;
            
        scr_play(snd_ghost_bomber_spawn, false);
    break;
        
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///TIME'S UP, BABY GOOSE
hp = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (cooldown)
{
    cooldown = false;
    //idle = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///KNOCK NO MO'
if (knock)
{
    knock = false;
    image_blend = c_white;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>idle = true;

idle_target_x = irandom_range(global.rom_offset, global.rom_width+global.rom_offset);

if (ystart &gt; global.rom_center_y)
    idle_target_y = irandom_range(global.rom_center_y, global.rom_height+global.rom_offset);
else
    idle_target_y = irandom_range(global.rom_offset, global.rom_center_y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///ANIMATION
if (image_alpha &lt; 1)
    image_alpha += 1/30;

if (speed == 0)
    sin_add += 0.05;
else
    sin_add = 0;

if (idle)
{
    bonus = 2;
    frame = 0;
}
else if (instance_exists(target) &amp;&amp; (seed!=seedno.catcher))
{
    bonus = 1;
    frame = 2;
}

switch(anim)
{
    case 0:
    break;

    case 1:
        image_xscale -= scale/(20*bonus)*dir;
        image_yscale += scale/(15*bonus);
        
        image_index = 1 + frame;
        
        if (image_yscale &gt;= scale*1.20)
        {
            anim++; 
        }
    break;

    case 2:
        image_xscale += scale/(20*bonus)*dir;
        image_yscale -= scale/(15*bonus);
        
        image_index = 0 + frame;
        
        if (speed == 0 &amp;&amp; image_yscale &lt;= scale)
            anim = 0;
        else if (image_yscale &lt;= scale*0.80)
                anim--;
    break;
}

depth = -y;

// Orientation
if ((image_xscale&lt;0 &amp;&amp; direction&gt;90 &amp;&amp; direction&lt;270) || (image_xscale&gt;0 &amp;&amp; direction&lt;90 &amp;&amp; direction&gt;270))
{
    dir *= -1;
    image_xscale *= -1;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///IDLE
if (idle == true &amp;&amp; seed!=seedno.catcher)
{
    if (anim == 0)
        anim = 1;
        
    move_towards_point(idle_target_x, idle_target_y, idle_spd);
    
    if (x&gt;idle_target_x-spd &amp;&amp; x&lt;idle_target_x+spd &amp;&amp; y&gt;idle_target_y-spd &amp;&amp; y&lt;idle_target_y+spd)
    {
        speed = 0;
        idle = false;
        alarm[0] = irandom_range(15, 180);
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///ACTIONS

switch(seed)
{
    case seedno.attacker:
        scr_ghost_attacker_find();
        scr_ghost_attack_target(3);
    break;
    
    case seedno.defender:
        scr_ghost_defender_find();
        scr_ghost_attack_target(5);
    break;
    
    case seedno.catcher:
        scr_ghost_catcher_find();
        scr_ghost_catcher_pick();
        scr_ghost_catcher_place();
    break;
    
    case seedno.paralyzer:

    break;
    
    case seedno.bomber:
        scr_ghost_bomber_find();
        scr_ghost_bomber_explode();
    break;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///KNOCKY-BOY

if (knock)
{
    if (x+knock_x &gt; global.rom_offset &amp;&amp; x+knock_x &lt; global.rom_offset+global.rom_width)
        x += knock_x;
    if (y+knock_y &gt; global.rom_offset &amp;&amp; y+knock_y &lt; global.rom_offset+global.rom_height)
        y += knock_y;
        
    image_blend = c_red;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DEATH

if (hp &lt;= 0)
    image_alpha -= 0.05;

if (image_alpha &lt;= 0)
{
    if (picking != -1)
    {
        instance_create(x, y, obj_furball);
        with picking instance_destroy();
    }

    with self instance_destroy();   
}

/*if (seed!=seedno.bomber &amp;&amp; ( target==noone || target==-1 || target==0))
{
    idle = true;
    speed = 0;
}*/

if (!instance_exists(target))
{
    idle = true;
    
    idle_target_x = irandom_range(global.rom_offset, global.rom_width+global.rom_offset);

if (ystart &gt; global.rom_center_y)
    idle_target_y = irandom_range(global.rom_center_y, global.rom_height+global.rom_offset);
else
    idle_target_y = irandom_range(global.rom_offset, global.rom_center_y);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DRAW

draw_sprite_ext(spr_shadow, global.player[owner].color, x, y, scale*0.75, scale*0.75, image_angle, image_blend, 0.5);
//draw_self();
draw_sprite_ext(sprite_index, image_index, x, y+sin(sin_add)*spd*4, image_xscale, image_yscale, image_angle, image_blend, image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
